<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>EasySPF</PackageId>
    <PackageVersion>1.0.0</PackageVersion>
    <Authors>SPF Team</Authors>
    <Description>Minimal C# wrapper for SPF (SSH Port Forwarding) - simply calls main_windows.go</Description>
    <PackageTags>ssh;port-forwarding;socks5;tunnel;systray;minimal</PackageTags>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="../libeasyspf.*" CopyToOutputDirectory="PreserveNewest" />
    <Content Include="../easyspf.dll" CopyToOutputDirectory="PreserveNewest" Condition="'$(OS)' == 'Windows_NT'" />
    <Content Include="../libeasyspf.dylib" CopyToOutputDirectory="PreserveNewest" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'" />
    <Content Include="../libeasyspf.so" CopyToOutputDirectory="PreserveNewest" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'" />
    <Content Include="../icon.ico" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

</Project>